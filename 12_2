import runer
import unittest


class  TournamentTest(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.all_results = {}

    def setUp(self):
        self.run_usein = runer.Runner('Усейн', 10)
        self.run_andrey = runer.Runner('Андрей', 9)
        self.run_nik = runer.Runner('Ник', 3)

    @classmethod
    def tearDownClass(self):
        for key in TournamentTest.all_results.keys():
            print(TournamentTest.all_results[key])

    def test_1(self):
        tour = runer.Tournament(90, self.run_usein, self.run_nik)
        result = tour.start()
        TournamentTest.all_results.update({'test1' : {key : value.name for (key, value) in result.items()}})
        max_key = max(result.keys())
        self.assertTrue(result[max_key] == 'Ник')

    def test_2(self):
        tour = runer.Tournament(90, self.run_andrey, self.run_nik)
        result = tour.start()
        TournamentTest.all_results.update({'test2' : {key : value.name for (key, value) in result.items()}})
        max_key = max(result.keys())
        self.assertTrue(result[max_key] == 'Ник')

    def test_3(self):
        tour = runer.Tournament(90, self.run_andrey, self.run_usein, self.run_nik)
        result = tour.start()
        TournamentTest.all_results.update({'test3' : {key : value.name for (key, value) in result.items()}})
        max_key = max(result.keys())
        self.assertTrue(result[max_key] == 'Ник')

if __name__ == '__main__':
    unittest.main()
